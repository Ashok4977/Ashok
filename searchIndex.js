export default {
  "undefined": {
    "content": "# UnderlineNav\n\nUse the UnderlineNav component to style navigation with a minimal underlined selected state, typically used for navigation placed at the top of the page.\n\nTo use UnderlineNav with [react-router](https://github.com/ReactTraining/react-router) or\n[react-router-dom](https://www.npmjs.com/package/react-router-dom), pass\n```as={NavLink}``` and omit the ```selected``` prop.\nThis ensures that the NavLink gets ```activeClassName='selected'```\n\n## Default example\n\n```.jsx\n<ExampleHeading>\n  Using <Text fontFamily=\"mono\">{'<UnderlineNav.Link>'}</Text>\n</ExampleHeading>\n<UnderlineNav>\n  <UnderlineNav.Link href=\"#foo\" selected>\n    Selected\n  </UnderlineNav.Link>\n  <UnderlineNav.Link href=\"#bar\">Bar</UnderlineNav.Link>\n  <UnderlineNav.Link href=\"#baz\">Baz</UnderlineNav.Link>\n</UnderlineNav>\n```\n\n## System props\n\nUnderlineNav and UnderlineNav.Link components get `COMMON` system props. Read our [System Props](/components/docs/system-props) doc page for a full list of available props.\n\n\n## Component props\n\n### UnderlineNav\n| Prop name | Type | Description |\n| :- | :- | :- |\n| actions | Node | Place another element, such as a button, to the opposite side of the navigation items.|\n| align | String | Use `right` to have navigation items aligned right. |\n| full | Boolean | Used to make navigation fill the width of the container. |\n| label | String | Used to set the `aria-label` on the top level `<nav>` element. |\n\n### UnderlineNav.Link\n| Prop name | Type | Description |\n| :- | :- | :- |\n| as | String | sets the HTML tag for the component|\n| selected | Boolean | Used to style the link as selected or unselected |\n\nexport const meta = {displayName: 'UnderlineNav'}\n"
  }
}