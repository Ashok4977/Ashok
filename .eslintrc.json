{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "extends": [
    "plugin:react/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:react-hooks/recommended",
    "plugin:prettier/recommended",
    "plugin:github/recommended",
    "plugin:github/browser",
    "plugin:primer-react/recommended"
  ],
  "ignorePatterns": [
    "node_modules",
    ".cache",
    "coverage/**/*",
    "docs/public/**/*",
    "dist/**/*",
    "lib/**/*",
    "lib-*/**/*",
    "types/**/*",
    "consumer-test/**/*",
    "contributor-docs/adrs/*",
    "examples/nextjs/**",
    // Note: this file is inlined from an external dependency
    "src/utils/polymorphic.ts",
    "storybook-static"
  ],
  "globals": {
    "__DEV__": "readonly"
  },
  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true,
    "jest": true,
    "node": true
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  // rules which apply to JS, TS, etc.
  "rules": {
    "no-shadow": 0,
    "react/prop-types": 0,
    "react/display-name": 0,
    "react-hooks/exhaustive-deps": "error",
    "jsx-a11y/label-has-for": [
      2,
      {
        "components": []
      }
    ],
    "camelcase": [
      "error",
      {
        "allow": ["dark_dimmed"]
      }
    ],
    "primer-react/no-deprecated-colors": ["warn", {"checkAllStrings": true}],
    "filenames/match-regex": "off",
    "import/no-commonjs": "off",
    "import/no-dynamic-require": "off",
    "import/no-nodejs-modules": "off",
    "import/no-unresolved": "off",
    "import/named": "off",
    "import/no-named-as-default": "off",
    "i18n-text/no-en": "off",
    "import/default": "off",
    "import/namespace": "off",
    "import/extensions": "off"
  },
  "overrides": [
    // rules which apply only to JS
    {
      "files": ["**/*.{js,jsx}"],
      "rules": {
        "eslint-comments/no-use": 0,
        "import/no-namespace": 0,
        "no-unused-vars": [
          "error",
          {
            "ignoreRestSiblings": true
          }
        ]
      }
    },
    // rules which apply only to TS
    {
      "parserOptions": {
        "project": "tsconfig.json"
      },
      "files": ["**/*.{ts,tsx}"],
      "extends": ["plugin:@typescript-eslint/recommended"],
      "rules": {
        "@typescript-eslint/no-explicit-any": 2,
        "@typescript-eslint/no-unnecessary-condition": 2,
        "@typescript-eslint/explicit-module-boundary-types": 0,
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_"
          }
        ],
        "@typscript-eslint/no-shadow": 0,
        "@typescript-eslint/no-empty-function": 0,
        "@typescript-eslint/ban-ts-comment": [
          "error",
          {
            "ts-ignore": "allow-with-description"
          }
        ]
      }
    },
    // rules which apply only to Markdown
    {
      "files": ["**/*.{md,mdx}"],
      "extends": ["plugin:mdx/recommended"],
      "settings": {
        "mdx/code-blocks": true
      },
      "globals": {
        "ComponentChecklist": "readonly",
        "InlineCode": "readonly",
        "Note": "readonly",
        "Props": "readonly",
        "PropsTable": "readonly",
        "PropsTableRow": "readonly",
        "PropsTableRefRow": "readonly",
        "PropsTableSxRow": "readonly",
        "Link": "readonly"
      },
      "rules": {
        "prettier/prettier": 0
      }
    },
    // rules which apply only to Markdown code blocks
    {
      "files": ["**/*.{md,mdx}/**"],
      "parserOptions": {
        "project": false
      },
      "rules": {
        "camelcase": 0,
        "no-constant-condition": 0,
        "no-console": 0,
        "no-empty-pattern": 0,
        "no-unused-vars": 0,
        "no-undef": 0,
        "react/no-unescaped-entities": 0,
        "react/react-in-jsx-scope": 0,
        "react/jsx-no-undef": 0,
        "react/jsx-key": 0,
        "react/jsx-no-comment-textnodes": 0,
        "import/no-anonymous-default-export": 0,
        "prettier/prettier": 0,
        // These a11y rules should eventually be re-enabled
        "jsx-a11y/anchor-is-valid": 0,
        "jsx-a11y/accessible-emoji": 0,
        "jsx-a11y/label-has-for": 0,
        "@typescript-eslint/no-unnecessary-condition": 0,
        "@typescript-eslint/no-unused-vars": 0,
        "primer-react/no-deprecated-colors": ["error", {"skipImportCheck": true}],
        "no-redeclare": 0
      }
    },
    {
      "parserOptions": {
        "project": "tsconfig.json"
      },
      "files": ["playwright.config.ts", "e2e/**/*.{ts,tsx}"],
      "rules": {
        "github/array-foreach": "off"
      }
    }
  ]
}
