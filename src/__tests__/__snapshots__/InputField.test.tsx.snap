// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InputField snapshots renders as disabled 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c0 > *:not(label) + * {
  margin-top: 8px;
}

.c3 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c3:focus {
  outline: 0;
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 34px;
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-repeat: no-repeat;
  background-position: right 8px center;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  cursor: text;
  padding: 6px 12px;
  color: #8c959f;
  background-color: rgba(175,184,193,0.2);
  border-color: #d0d7de;
}

.c2 .TextInput-icon {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  margin: 0 8px;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c2:focus-within {
  border-color: #0969da;
  box-shadow: 0 0 0 3px rgba(9,105,218,0.3);
}

.c1 {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  white-space: nowrap;
  border-width: 0;
}

@media (min-width:768px) {
  .c2 {
    font-size: 14px;
  }
}

<div
  className="c0"
  display="flex"
  width="100%"
>
  <label
    className="c1"
    htmlFor="react-aria-1"
  >
    Name
  </label>
  <span
    className="c2 TextInput-wrapper"
    disabled={true}
  >
    <input
      aria-describedby=""
      className="c3"
      disabled={true}
      id="react-aria-1"
      type="text"
    />
  </span>
</div>
`;

exports[`InputField snapshots renders as required 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c0 > * + * {
  margin-top: 8px;
}

.c2 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c2:focus {
  outline: 0;
}

.c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 34px;
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-repeat: no-repeat;
  background-position: right 8px center;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  cursor: text;
  padding: 6px 12px;
}

.c1 .TextInput-icon {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  margin: 0 8px;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c1:focus-within {
  border-color: #0969da;
  box-shadow: 0 0 0 3px rgba(9,105,218,0.3);
}

@media (min-width:768px) {
  .c1 {
    font-size: 14px;
  }
}

<div
  className="c0"
  display="flex"
  width="100%"
>
  <span
    className="c1 TextInput-wrapper"
  >
    <input
      aria-describedby=""
      className="c2"
      id="react-aria-1"
      required={true}
      type="text"
    />
  </span>
</div>
`;

exports[`InputField snapshots renders with a caption 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c0 > * + * {
  margin-top: 8px;
}

.c3 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c3:focus {
  outline: 0;
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 34px;
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-repeat: no-repeat;
  background-position: right 8px center;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  cursor: text;
  padding: 6px 12px;
}

.c2 .TextInput-icon {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  margin: 0 8px;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c2:focus-within {
  border-color: #0969da;
  box-shadow: 0 0 0 3px rgba(9,105,218,0.3);
}

.c1 {
  font-weight: 600;
  font-size: 14px;
  display: block;
  color: #24292f;
}

.c4 {
  font-size: 12px;
  color: #57606a;
}

@media (min-width:768px) {
  .c2 {
    font-size: 14px;
  }
}

<div
  className="c0"
  display="flex"
  width="100%"
>
  <label
    className="c1"
    htmlFor="react-aria-1"
  >
    Name
  </label>
  <span
    className="c2 TextInput-wrapper"
  >
    <input
      aria-describedby="react-aria-1-caption"
      className="c3"
      id="react-aria-1"
      type="text"
    />
  </span>
  <span
    className="c4"
    color="fg.muted"
    fontSize={0}
    id="react-aria-1-caption"
  >
    Hint: your first name
  </span>
</div>
`;

exports[`InputField snapshots renders with a custom ID 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c0 > * + * {
  margin-top: 8px;
}

.c2 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c2:focus {
  outline: 0;
}

.c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 34px;
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-repeat: no-repeat;
  background-position: right 8px center;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  cursor: text;
  padding: 6px 12px;
}

.c1 .TextInput-icon {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  margin: 0 8px;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c1:focus-within {
  border-color: #0969da;
  box-shadow: 0 0 0 3px rgba(9,105,218,0.3);
}

@media (min-width:768px) {
  .c1 {
    font-size: 14px;
  }
}

<div
  className="c0"
  display="flex"
  width="100%"
>
  <span
    className="c1 TextInput-wrapper"
  >
    <input
      aria-describedby=""
      className="c2"
      id="customId"
      type="text"
    />
  </span>
</div>
`;

exports[`InputField snapshots renders with a hidden label 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c0 > *:not(label) + * {
  margin-top: 8px;
}

.c3 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c3:focus {
  outline: 0;
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 34px;
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-repeat: no-repeat;
  background-position: right 8px center;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  cursor: text;
  padding: 6px 12px;
}

.c2 .TextInput-icon {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  margin: 0 8px;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c2:focus-within {
  border-color: #0969da;
  box-shadow: 0 0 0 3px rgba(9,105,218,0.3);
}

.c1 {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  white-space: nowrap;
  border-width: 0;
}

@media (min-width:768px) {
  .c2 {
    font-size: 14px;
  }
}

<div
  className="c0"
  display="flex"
  width="100%"
>
  <label
    className="c1"
    htmlFor="react-aria-1"
  >
    Name
  </label>
  <span
    className="c2 TextInput-wrapper"
  >
    <input
      aria-describedby=""
      className="c3"
      id="react-aria-1"
      type="text"
    />
  </span>
</div>
`;

exports[`InputField snapshots renders with a label an input 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c0 > * + * {
  margin-top: 8px;
}

.c2 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c2:focus {
  outline: 0;
}

.c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 34px;
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-repeat: no-repeat;
  background-position: right 8px center;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  cursor: text;
  padding: 6px 12px;
}

.c1 .TextInput-icon {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  margin: 0 8px;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c1:focus-within {
  border-color: #0969da;
  box-shadow: 0 0 0 3px rgba(9,105,218,0.3);
}

@media (min-width:768px) {
  .c1 {
    font-size: 14px;
  }
}

<div
  className="c0"
  display="flex"
  width="100%"
>
  <span
    className="c1 TextInput-wrapper"
  >
    <input
      aria-describedby=""
      className="c2"
      id="react-aria-1"
      type="text"
    />
  </span>
</div>
`;

exports[`InputField snapshots renders with a successful validation message 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c0 > * + * {
  margin-top: 8px;
}

.c6 {
  margin-right: 4px;
}

.c3 {
  height: auto;
  overflow: hidden;
}

.c2 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c2:focus {
  outline: 0;
}

.c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 34px;
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-repeat: no-repeat;
  background-position: right 8px center;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  cursor: text;
  padding: 6px 12px;
}

.c1 .TextInput-icon {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  margin: 0 8px;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c1:focus-within {
  border-color: #0969da;
  box-shadow: 0 0 0 3px rgba(9,105,218,0.3);
}

.c4 {
  -webkit-animation: 170ms eGcHP cubic-bezier(0.44,0.74,0.36,1);
  animation: 170ms eGcHP cubic-bezier(0.44,0.74,0.36,1);
}

.c5 {
  font-size: 12px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #1a7f37;
  -webkit-align-items: baseline;
  -webkit-box-align: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
}

.c5 a {
  color: currentColor;
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

@media (min-width:768px) {
  .c1 {
    font-size: 14px;
  }
}

<div
  className="c0"
  display="flex"
  width="100%"
>
  <span
    className="c1 TextInput-wrapper"
  >
    <input
      aria-describedby="react-aria-1-validationMsg"
      className="c2"
      id="react-aria-1"
      type="text"
    />
  </span>
  <div
    className="c3"
    height="auto"
    overflow="hidden"
  >
    <div
      className="c4"
      onAnimationEnd={[Function]}
    >
      <span
        className="c5"
        color="success.fg"
        display="flex"
        fontSize={0}
      >
        <span
          className="c6"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-check-circle-fill"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<path fill-rule=\\"evenodd\\" d=\\"M6 0a6 6 0 100 12A6 6 0 006 0zm-.705 8.737L9.63 4.403 8.392 3.166 5.295 6.263l-1.7-1.702L2.356 5.8l2.938 2.938z\\"></path>",
              }
            }
            fill="currentColor"
            height={12}
            role="img"
            style={
              Object {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 12 12"
            width={12}
          />
        </span>
        <span
          id="react-aria-1-validationMsg"
        >
          This name is valid
        </span>
      </span>
    </div>
  </div>
</div>
`;

exports[`InputField snapshots renders with an error validation message 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c0 > * + * {
  margin-top: 8px;
}

.c7 {
  margin-right: 4px;
}

.c4 {
  height: auto;
  overflow: hidden;
}

.c3 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c3:focus {
  outline: 0;
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 34px;
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-repeat: no-repeat;
  background-position: right 8px center;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  cursor: text;
  padding: 6px 12px;
}

.c2 .TextInput-icon {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  margin: 0 8px;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c2:focus-within {
  border-color: #0969da;
  box-shadow: 0 0 0 3px rgba(9,105,218,0.3);
}

.c1 {
  font-weight: 600;
  font-size: 14px;
  display: block;
  color: #24292f;
}

.c5 {
  -webkit-animation: 170ms eGcHP cubic-bezier(0.44,0.74,0.36,1);
  animation: 170ms eGcHP cubic-bezier(0.44,0.74,0.36,1);
}

.c6 {
  font-size: 12px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #cf222e;
  -webkit-align-items: baseline;
  -webkit-box-align: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
}

.c6 a {
  color: currentColor;
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

@media (min-width:768px) {
  .c2 {
    font-size: 14px;
  }
}

<div
  className="c0"
  display="flex"
  width="100%"
>
  <label
    className="c1"
    htmlFor="react-aria-1"
  >
    Name
  </label>
  <span
    className="c2 TextInput-wrapper"
  >
    <input
      aria-describedby="react-aria-1-validationMsg"
      className="c3"
      id="react-aria-1"
      type="text"
    />
  </span>
  <div
    className="c4"
    height="auto"
    overflow="hidden"
  >
    <div
      className="c5"
      onAnimationEnd={[Function]}
    >
      <span
        className="c6"
        color="danger.fg"
        display="flex"
        fontSize={0}
      >
        <span
          className="c7"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-alert-fill"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<path fill-rule=\\"evenodd\\" d=\\"M4.855.708c.5-.896 1.79-.896 2.29 0l4.675 8.351a1.312 1.312 0 01-1.146 1.954H1.33A1.312 1.312 0 01.183 9.058L4.855.708zM7 7V3H5v4h2zm-1 3a1 1 0 100-2 1 1 0 000 2z\\"></path>",
              }
            }
            fill="currentColor"
            height={12}
            role="img"
            style={
              Object {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 12 12"
            width={12}
          />
        </span>
        <span
          id="react-aria-1-validationMsg"
        >
          Your first name cannot contain spaces
        </span>
      </span>
    </div>
  </div>
</div>
`;

exports[`InputField snapshots renders with the input as a TextInputWithTokens 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c0 > * + * {
  margin-top: 8px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -0.25rem;
  margin-bottom: -0.25rem;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c2 > * {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin-left: 0.25rem;
  margin-bottom: 0.25rem;
}

.c3 {
  -webkit-order: 1;
  -ms-flex-order: 1;
  order: 1;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c4 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
  height: 100%;
}

.c4:focus {
  outline: 0;
}

.c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 34px;
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-repeat: no-repeat;
  background-position: right 8px center;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  cursor: text;
  padding: 6px 12px;
}

.c1 .TextInput-icon {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  margin: 0 8px;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c1:focus-within {
  border-color: #0969da;
  box-shadow: 0 0 0 3px rgba(9,105,218,0.3);
}

.c7 {
  background-color: transparent;
  font-family: inherit;
  color: currentColor;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0;
  -webkit-transform: translate(1px,-1px);
  -ms-transform: translate(1px,-1px);
  transform: translate(1px,-1px);
  -webkit-align-self: baseline;
  -ms-flex-item-align: baseline;
  align-self: baseline;
  border: 0;
  border-radius: 999px;
  margin-left: 8px;
  height: 32px;
  width: 32px;
  position: relative;
  z-index: 1;
}

.c7:hover,
.c7:focus {
  background-color: rgba(175,184,193,0.2);
}

.c7:active {
  background-color: rgba(234,238,242,0.5);
}

.c6 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  margin: 0;
  overflow: visible;
  padding: 0;
  width: auto;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  line-height: 1;
  color: currentColor;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c6:is(a,button,[tabIndex='0']) {
  cursor: pointer;
}

.c6:is(a,button,[tabIndex='0']):after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 999px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  font-size: 14px;
  height: 32px;
  line-height: 32px;
  padding-left: 16px;
  padding-right: 16px;
  padding-top: 0;
  padding-bottom: 0;
  background-color: rgba(234,238,242,0.5);
  border-color: rgba(27,31,36,0.15);
  border-style: solid;
  border-width: 1px;
  color: #57606a;
  max-width: 100%;
  padding-right: 0;
  position: relative;
}

.c5:hover {
  background-color: rgba(175,184,193,0.2);
  color: #24292f;
}

@media (min-width:768px) {
  .c1 {
    font-size: 14px;
  }
}

<div
  className="c0"
  display="flex"
  width="100%"
>
  <span
    className="c1"
    onClick={[Function]}
  >
    <div
      className="c2"
      display="flex"
    >
      <div
        className="c3"
      >
        <input
          aria-describedby=""
          className="c4"
          id="react-aria-1"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onRemove={[MockFunction]}
          type="text"
        />
      </div>
      <span
        aria-label="zero, press backspace or delete to remove"
        className="c5"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onRemove={[Function]}
        size="extralarge"
        tabIndex={0}
      >
        <span
          className="c6"
          onClick={[Function]}
        >
          zero
        </span>
        <span
          aria-hidden="true"
          className="c7"
          onClick={[Function]}
          size="extralarge"
          tabIndex={-1}
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-x"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<path fill-rule=\\"evenodd\\" d=\\"M5.72 5.72a.75.75 0 011.06 0L12 10.94l5.22-5.22a.75.75 0 111.06 1.06L13.06 12l5.22 5.22a.75.75 0 11-1.06 1.06L12 13.06l-5.22 5.22a.75.75 0 01-1.06-1.06L10.94 12 5.72 6.78a.75.75 0 010-1.06z\\"></path>",
              }
            }
            fill="currentColor"
            height={24}
            role="img"
            style={
              Object {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 24 24"
            width={24}
          />
        </span>
      </span>
      <span
        aria-label="one, press backspace or delete to remove"
        className="c5"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onRemove={[Function]}
        size="extralarge"
        tabIndex={0}
      >
        <span
          className="c6"
          onClick={[Function]}
        >
          one
        </span>
        <span
          aria-hidden="true"
          className="c7"
          onClick={[Function]}
          size="extralarge"
          tabIndex={-1}
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-x"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<path fill-rule=\\"evenodd\\" d=\\"M5.72 5.72a.75.75 0 011.06 0L12 10.94l5.22-5.22a.75.75 0 111.06 1.06L13.06 12l5.22 5.22a.75.75 0 11-1.06 1.06L12 13.06l-5.22 5.22a.75.75 0 01-1.06-1.06L10.94 12 5.72 6.78a.75.75 0 010-1.06z\\"></path>",
              }
            }
            fill="currentColor"
            height={24}
            role="img"
            style={
              Object {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 24 24"
            width={24}
          />
        </span>
      </span>
      <span
        aria-label="two, press backspace or delete to remove"
        className="c5"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onRemove={[Function]}
        size="extralarge"
        tabIndex={0}
      >
        <span
          className="c6"
          onClick={[Function]}
        >
          two
        </span>
        <span
          aria-hidden="true"
          className="c7"
          onClick={[Function]}
          size="extralarge"
          tabIndex={-1}
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-x"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<path fill-rule=\\"evenodd\\" d=\\"M5.72 5.72a.75.75 0 011.06 0L12 10.94l5.22-5.22a.75.75 0 111.06 1.06L13.06 12l5.22 5.22a.75.75 0 11-1.06 1.06L12 13.06l-5.22 5.22a.75.75 0 01-1.06-1.06L10.94 12 5.72 6.78a.75.75 0 010-1.06z\\"></path>",
              }
            }
            fill="currentColor"
            height={24}
            role="img"
            style={
              Object {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 24 24"
            width={24}
          />
        </span>
      </span>
    </div>
  </span>
</div>
`;

exports[`InputField snapshots renders with the input as an Autocomplete 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c0 > * + * {
  margin-top: 8px;
}

.c3 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c3:focus {
  outline: 0;
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 34px;
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-repeat: no-repeat;
  background-position: right 8px center;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  cursor: text;
  padding: 6px 12px;
  display: block;
  width: 100%;
}

.c2 .TextInput-icon {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  margin: 0 8px;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c2:focus-within {
  border-color: #0969da;
  box-shadow: 0 0 0 3px rgba(9,105,218,0.3);
}

.c1 {
  font-weight: 600;
  font-size: 14px;
  display: block;
  color: #24292f;
}

@media (min-width:768px) {
  .c2 {
    font-size: 14px;
  }
}

<div
  className="c0"
  display="flex"
  width="100%"
>
  <label
    className="c1"
    htmlFor="react-aria-1"
  >
    Name
  </label>
  <span
    className="c2 TextInput-wrapper"
  >
    <input
      aria-autocomplete="both"
      aria-controls="react-aria-1-listbox"
      aria-expanded={false}
      aria-haspopup="listbox"
      aria-owns="react-aria-1-listbox"
      className="c3"
      id="react-aria-1"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      onKeyUp={[Function]}
      role="combobox"
      type="text"
    />
  </span>
</div>
`;
